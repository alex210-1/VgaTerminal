--! Defines all scancodes on a standard german keyboard
--! generated by gen_keycodes.py
--! Keycodes.vhd
--! source: https://upload.wikimedia.org/wikipedia/commons/6/66/Ps2_de_keyboard_scancode_set_2.svg
--! Alexander Horstk√∂tter 03.11.2022

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package keycodes is
    type KeyCommand is (
        CMD_ESCAPE,
        CMD_BACKSPACE,
        CMD_TAB,
        CMD_DELETE,
        CMD_ENTER,
        CMD_WIN,
        CMD_LEFT,
        CMD_RIGHT,
        CMD_UP,
        CMD_DOWN
    );

    type KeyCode is (
        KEY_ESC,
        KEY_F1,
        KEY_F2,
        KEY_F3,
        KEY_F4,
        KEY_F5,
        KEY_F6,
        KEY_F7,
        KEY_F8,
        KEY_F9,
        KEY_F10,
        KEY_F11,
        KEY_F12,
        KEY_SLEEP,
        KEY_WAKEUP,
        KEY_POWER,
        KEY_CIRCUMFLEX,
        KEY_1,
        KEY_2,
        KEY_3,
        KEY_4,
        KEY_5,
        KEY_6,
        KEY_7,
        KEY_8,
        KEY_9,
        KEY_0,
        KEY_QUESTIONMARK,
        KEY_BACKTICK,
        KEY_BACKSPACE,
        KEY_ROLL,
        KEY_NUMLOCK,
        KEY_NUM_DIV,
        KEY_NUM_MUL,
        KEY_NUM_MINUS,
        KEY_TAB,
        KEY_Q,
        KEY_W,
        KEY_E,
        KEY_R,
        KEY_T,
        KEY_Z,
        KEY_U,
        KEY_I,
        KEY_O,
        KEY_P,
        KEY_UE,
        KEY_PLUS,
        KEY_ENTER,
        KEY_INSERT,
        KEY_POS1,
        KEY_PAGE_UP,
        KEY_NUM_7,
        KEY_NUM_8,
        KEY_NUM_9,
        KEY_NUM_PLUS,
        KEY_CAPS_LOCK,
        KEY_A,
        KEY_S,
        KEY_D,
        KEY_F,
        KEY_G,
        KEY_H,
        KEY_J,
        KEY_K,
        KEY_L,
        KEY_OE,
        KEY_AE,
        KEY_HASH,
        KEY_DELETE,
        KEY_END,
        KEY_PAGE_DOWN,
        KEY_NUM_4,
        KEY_NUM_5,
        KEY_NUM_6,
        KEY_L_SHIFT,
        KEY_SMALLER,
        KEY_Y,
        KEY_X,
        KEY_C,
        KEY_V,
        KEY_B,
        KEY_N,
        KEY_M,
        KEY_COMMA,
        KEY_PERIOD,
        KEY_MINUS,
        KEY_R_SHIFT,
        KEY_ARROW_UP,
        KEY_NUM_1,
        KEY_NUM_2,
        KEY_NUM_3,
        KEY_NUM_ENTER,
        KEY_L_CTRL,
        KEY_L_WIN,
        KEY_ALT,
        KEY_SPACE,
        KEY_ALT_GR,
        KEY_R_WIN,
        KEY_R_CTRL,
        KEY_ARROW_LEFT,
        KEY_ARROW_DOWN,
        KEY_ARROW_RIGHT,
        KEY_NUM_0,
        KEY_NUM_DOT,
        KEY_INVALID
    );

    function scancode_to_keycode(
        signal scancode : std_logic_vector(15 downto 0)
    ) return KeyCode;
end package;

package body keycodes is
    function scancode_to_keycode(
        signal scancode : std_logic_vector(15 downto 0)
    ) return KeyCode is
        variable output : KeyCode;
    begin
        with scancode select output :=
            KEY_ESC when x"0076",
            KEY_F1 when x"0005",
            KEY_F2 when x"0006",
            KEY_F3 when x"0004",
            KEY_F4 when x"000C",
            KEY_F5 when x"0003",
            KEY_F6 when x"000B",
            KEY_F7 when x"0083",
            KEY_F8 when x"000A",
            KEY_F9 when x"0001",
            KEY_F10 when x"0009",
            KEY_F11 when x"0078",
            KEY_F12 when x"0007",
            KEY_SLEEP when x"E03F",
            KEY_WAKEUP when x"E05E",
            KEY_POWER when x"E037",
            KEY_CIRCUMFLEX when x"000E",
            KEY_1 when x"0016",
            KEY_2 when x"001E",
            KEY_3 when x"0026",
            KEY_4 when x"0025",
            KEY_5 when x"002E",
            KEY_6 when x"0036",
            KEY_7 when x"003D",
            KEY_8 when x"003E",
            KEY_9 when x"0046",
            KEY_0 when x"0045",
            KEY_QUESTIONMARK when x"004E",
            KEY_BACKTICK when x"0055",
            KEY_BACKSPACE when x"0066",
            KEY_ROLL when x"007E",
            KEY_NUMLOCK when x"0077",
            KEY_NUM_DIV when x"E04A",
            KEY_NUM_MUL when x"007C",
            KEY_NUM_MINUS when x"007B",
            KEY_TAB when x"000D",
            KEY_Q when x"0015",
            KEY_W when x"001D",
            KEY_E when x"0024",
            KEY_R when x"002D",
            KEY_T when x"002C",
            KEY_Z when x"0035",
            KEY_U when x"003C",
            KEY_I when x"0043",
            KEY_O when x"0044",
            KEY_P when x"004D",
            KEY_UE when x"0054",
            KEY_PLUS when x"005B",
            KEY_ENTER when x"005A",
            KEY_INSERT when x"E070",
            KEY_POS1 when x"E06C",
            KEY_PAGE_UP when x"E07D",
            KEY_NUM_7 when x"006C",
            KEY_NUM_8 when x"0075",
            KEY_NUM_9 when x"007D",
            KEY_NUM_PLUS when x"0079",
            KEY_CAPS_LOCK when x"0058",
            KEY_A when x"001C",
            KEY_S when x"001B",
            KEY_D when x"0023",
            KEY_F when x"002B",
            KEY_G when x"0034",
            KEY_H when x"0033",
            KEY_J when x"003B",
            KEY_K when x"0042",
            KEY_L when x"004B",
            KEY_OE when x"004C",
            KEY_AE when x"0052",
            KEY_HASH when x"005D",
            KEY_DELETE when x"E071",
            KEY_END when x"E069",
            KEY_PAGE_DOWN when x"E07A",
            KEY_NUM_4 when x"006B",
            KEY_NUM_5 when x"0073",
            KEY_NUM_6 when x"0074",
            KEY_L_SHIFT when x"0012",
            KEY_SMALLER when x"0061",
            KEY_Y when x"001A",
            KEY_X when x"0022",
            KEY_C when x"0021",
            KEY_V when x"002A",
            KEY_B when x"0032",
            KEY_N when x"0031",
            KEY_M when x"003A",
            KEY_COMMA when x"0041",
            KEY_PERIOD when x"0049",
            KEY_MINUS when x"004A",
            KEY_R_SHIFT when x"0059",
            KEY_ARROW_UP when x"E075",
            KEY_NUM_1 when x"0069",
            KEY_NUM_2 when x"0072",
            KEY_NUM_3 when x"007A",
            KEY_NUM_ENTER when x"E05A",
            KEY_L_CTRL when x"0014",
            KEY_L_WIN when x"E01F",
            KEY_ALT when x"0011",
            KEY_SPACE when x"0029",
            KEY_ALT_GR when x"E011",
            KEY_R_WIN when x"E02F",
            KEY_R_CTRL when x"E014",
            KEY_ARROW_LEFT when x"E06B",
            KEY_ARROW_DOWN when x"E072",
            KEY_ARROW_RIGHT when x"E074",
            KEY_NUM_0 when x"0070",
            KEY_NUM_DOT when x"0071",
            KEY_INVALID when others;

        return output;
    end function;
end package body;